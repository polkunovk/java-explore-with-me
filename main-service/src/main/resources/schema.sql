CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(50) NOT NULL,
    email varchar(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned boolean DEFAULT FALSE,
    title varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation varchar(2000) NOT NULL,
    category_id BIGINT NOT NULL references categories(category_id),
    location_id BIGINT NOT NULL references locations(location_id),
    description TEXT NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    paid boolean,
    participant_limit INTEGER NOT NULL DEFAULT 0,
    request_moderation boolean DEFAULT true,
    confirmed_requests INTEGER NOT NULL,
    title varchar(120) NOT NULL,
    initiator_id BIGINT NOT NULL references users(user_id),
    state VARCHAR(50),
    views INTEGER NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE
);

CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name varchar(50) NOT NULL UNIQUE
);


CREATE TABLE IF NOT EXISTS test (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT NOT NULL references compilations(compilation_id),
    event_id BIGINT NOT NULL references events(event_id),
    PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests (
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id BIGINT NOT NULL references events(event_id),
    status varchar(20) NOT NULL,
    requestor_id BIGINT NOT NULL references users(user_id)
);

CREATE TABLE IF NOT EXISTS locations (
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL,
    UNIQUE (lat, lon)
);